Goal is to create a new Spark behavior that has:

- Func<Stream> -- i.e., "knows" how to get the raw contents of a spark view.  We don't want it to knowing view name, file location, or anything about where it comes from.
- InputType -- if any, should be a RenderSpark<T> where T is the input type.
- Change BehaviorNode ToBehavioralNode() in IViewToken to take in the ActionCall (or input type most likely).

- No usage of SparkSettings on DSL and view location should completely go away from runtime.
- No global SparkSettings, ActionContext & ViewContext.

- Scanning for Spark files:

 - Do a deep search for files in one pass, then untangle the namespaces and folders by rooting the file path at the top.
 - Discover *all* possible Spark view tokens by scanning the file system first.
 - Derive the "namespace" from its location from the root + use assembly name from view model for toplevel.

Mate up ActionCall's and ViewTokens:

- Use attachment scanning like the WebForms model.
- The ViewAttacher business needs to work as is.

Isolation of Spark files:

Exploded Packages in development mode - not reachable from host and other packages:

~/fubu-content/pak1/WebContent/*
~/fubu-content/pak2/WebContent/*
~/fubu-content/pak3/WebContent/*

Linked Package Projects via .fubu-manifest - not reachable from host and other packages:

~/../Pak4/*
~/../Pak5/*

Everything under Host - not reachable from packages:

~/*

Shared by everyone - reachable from packages (both modes) and host.

~/ReservedName1